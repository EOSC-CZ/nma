import logging

logging.basicConfig(level=logging.INFO)


from invenio_i18n import lazy_gettext as _
from oarepo import config

# glitchtip for reporting incidents
config.initialize_glitchtip()

# i18n
config.initialize_i18n()

config.configure_generic_parameters(
    code="nma",
    name=_("National Metadata Directory"),
    description=_(
        "Central repository of dataset metadata from across the Czech Republic"
    ),
    languages=[],
)

config.configure_communities(
    # if you have different community roles than owner, curator and member,
    # you can specify them here
)

config.register_workflow(
    "default",
    _("Default deposition workflow"),
    "common.workflows.default.DefaultWorkflowPermissions",
    "common.workflows.default.DefaultWorkflowRequests",
)

config.configure_cron()

# to enable datacite, uncomment the following lines
# from common.config.datacite import (
#               enable_datacite,
#               datacite_default_credentials,
#               datacite_community_prefix
# )
# enable_datacite(env)
# datacite_default_credentials(
#               env.INVENIO_DATACITE_PREFIX,
#               env.INVENIO_DATACITE_USERNAME,
#               env.INVENIO_DATACITE_PASSWORD)
# )
# datacite_community_prefix(
#              "biocev",
#               env.INVENIO_DATACITE_BIOCEV_PREFIX,
#               env.INVENIO_DATACITE_BIOCEV_USERNAME,
#               env.INVENIO_DATACITE_BIOCEV_PASSWORD)

# vocabularies:
config.configure_vocabulary(
    code="languages",
    name={
        "en": "Languages",
        "cs": "Jazyky",
    },
    description={
        "en": "Language definitions vocabulary.",
        "cs": "Slovník jazykových definic.",
    },
    props={
        "alpha3Code": {
            "description": _("ISO 639-2 standard 3-letter language code"),
            "icon": None,
            "label": _("Alpha3 code (English)"),
            "multiple": False,
            "placeholder": "eng, cze...",
            "search": False,
        },
    },
    dump_options=True,
)

# Feel free to add/override configuration options here. List of options can be
# found in the Invenio source code:
# https://github.com/inveniosoftware/invenio-app-rdm/blob/master/invenio_app_rdm/config.py
THEME_LOGO = "images/repo_logo_cs_rgb.svg"

THEME_FOOTER_TEMPLATE = "footer.html"


from common.oai.loaders.datarepo import DataRepoLoader
from common.oai.loaders.zenodo import ZenodoLoader
from common.vocabularies.coar_resource_types_reader import COARResourceTypeReader
from common.vocabularies.europa_languages import EuropaLanguagesTypeReader

DATASTREAMS_READERS = {
    "coar-resource-types": COARResourceTypeReader,
    "europa-languages": EuropaLanguagesTypeReader,
    "datarepo": DataRepoLoader,
    "zenodo": ZenodoLoader,
}

from common.oai.transformers.community import CommunityTransformer
from common.oai.transformers.datarepo import DataRepoTransformer
from common.oai.transformers.lindat import LinDatDCTransformer
from common.oai.transformers.zenodo import ZenodoTransformer

DATASTREAMS_TRANSFORMERS = {
    "lindat": LinDatDCTransformer,
    "add_community": CommunityTransformer,
    "datarepo": DataRepoTransformer,
    "zenodo": ZenodoTransformer,
}

from common.vocabularies.custom_fields import HintCF, NonPreferredLabelsCF, RelatedURICF

VOCABULARIES_CF = [
    RelatedURICF("relatedURI"),
    HintCF("hint"),
    NonPreferredLabelsCF("nonpreferredLabels"),
]


from oarepo_ui.ui.components import DisabledComponent, UIComponent

UI_OVERRIDES_DATASETS_SEARCH = {
    "Datasets.Search.SearchFilters.Toggle.element": DisabledComponent,
    "Datasets.Search.BucketAggregationValues.element": UIComponent(
        "FacetValueElement", "@js/datasets/search/FacetValueElement"
    ),
}

UI_OVERRIDES = {
    "datasets.search": UI_OVERRIDES_DATASETS_SEARCH,
    "datasets.search_without_slash": UI_OVERRIDES_DATASETS_SEARCH,
    "oarepo_communities.community_records": {
        "Community_records.Search.SearchFilters.Toggle.element": DisabledComponent,
    },
    "records_dashboard.search": {
        "Records_dashboard.Search.SearchFilters.Toggle.element": DisabledComponent,
    },
    "global_search_ui.search": {
        "Global_search.Search.SearchFilters.Toggle.element": DisabledComponent,
    },
}


env = config.load_configuration_variables()
# note: move this to oarepo.config.configure_einfra_aai
if env.get("INVENIO_REMOTE_AUTH_ENABLED", False):
    from oarepo_oidc_einfra import EINFRA_LOGIN_APP

    OAUTHCLIENT_REMOTE_APPS = {"e-infra": EINFRA_LOGIN_APP}
else:
    OAUTHCLIENT_REMOTE_APPS = {}

EINFRA_LAST_DUMP_PATH = "nrp_invenio_export.json"


# at the end, override the configuration with values that come from
# k8s' mapped files that were not processed in the steps above.
config.override_configuration()
