NameType:
  $id: NameType
  type: keyword
  enum:
  - Organizational
  - Personal

NameIdentifier:
  $id: NameIdentifier
  marshmallow:
    class: test_datacite.services.records.schema_datatypes.NameIdentifierSchema
  ui:
    marshmallow:
      class: test_datacite.services.records.ui_schema_datatypes.NameIdentifierUISchema
  properties:
    nameIdentifier:
      type: keyword
      required: true
    nameIdentifierScheme:
      type: keyword
      required: true
    schemeURI:
      type: url

AlternateIdentifier:
  $id: AlternateIdentifier
  marshmallow:
    class: test_datacite.services.records.schema_datatypes.AlternateIdentifierSchema
  ui:
    marshmallow:
      class: test_datacite.services.records.ui_schema_datatypes.AlternateIdentifierUISchema
  properties:
    alternateIdentifier:
      type: keyword
      required: true
    alternateIdentifierType:
      type: keyword
      required: true

Affiliation:
  $id: Affiliation
  marshmallow:
    class: test_datacite.services.records.schema_datatypes.AffiliationSchema
  ui:
    marshmallow:
      class: test_datacite.services.records.ui_schema_datatypes.AffiliationUISchema
  properties:
    name:
      type: keyword
      required: true
    affiliationIdentifier:
      type: keyword
    affiliationIdentifierScheme:
      type: keyword
    schemeURI:
      type: url

Creator:
  $id: Creator
  marshmallow:
    class: test_datacite.services.records.schema_datatypes.CreatorSchema
  ui:
    marshmallow:
      class: test_datacite.services.records.ui_schema_datatypes.CreatorUISchema

  properties:
    name:
      type: keyword
      required: true
    nameType:
      "$ref": "datacite-datatypes#NameType"
    givenName:
      type: keyword
    familyName:
      type: keyword
    nameIdentifiers[]:
      "$ref": "datacite-datatypes#NameIdentifier"
    affiliation[]:
      "$ref": "datacite-datatypes#Affiliation"
    lang:
      type: keyword

Contributor:
  $id: Contributor

  marshmallow:
    class: test_datacite.services.records.schema_datatypes.ContributorSchema
  ui:
    marshmallow:
      class: test_datacite.services.records.ui_schema_datatypes.ContributorUISchema

  use: 'datacite-datatypes#Creator'
  properties:
    contributorType:
      "$ref": "datacite-datatypes#ContributorType"
      required: true

ContributorType:
  $id: ContributorType
  type: keyword
  enum:
  - ContactPerson
  - DataCollector
  - DataCurator
  - DataManager
  - Distributor
  - Editor
  - HostingInstitution
  - Producer
  - ProjectLeader
  - ProjectManager
  - ProjectMember
  - RegistrationAgency
  - RegistrationAuthority
  - RelatedPerson
  - Researcher
  - ResearchGroup
  - RightsHolder
  - Sponsor
  - Supervisor
  - WorkPackageLeader
  - Other

TitleType:
  $id: TitleType
  type: keyword
  enum:
  - AlternativeTitle
  - Subtitle
  - TranslatedTitle
  - Other

Title:
  $id: Title
  marshmallow:
    class: test_datacite.services.records.schema_datatypes.TitleSchema
  ui:
    marshmallow:
      class: test_datacite.services.records.ui_schema_datatypes.TitleUISchema
  properties:
    title:
      type: fulltext
      required: true
    titleType:
      "use": "datacite-datatypes#TitleType"
    lang:
      type: keyword

Longitude:
  $id: Longitude
  type: float
  maximum: 180
  minimum: -180

Latitude:
  $id: Latitude
  type: float
  maximum: 90
  minimum: -90

Date:
  $id: Date
  marshmallow:
    class: test_datacite.services.records.schema_datatypes.DateSchema
  ui:
    marshmallow:
      class: test_datacite.services.records.ui_schema_datatypes.DateUISchema
  properties:
    date:
      type: edtf
      required: true
    dateType:
      "use": "datacite-datatypes#DateType"
      required: true
    dateInformation:
      type: keyword

DateType:
  $id: DateType
  type: keyword
  enum:
  - Accepted
  - Available
  - Copyrighted
  - Collected
  - Created
  - Issued
  - Submitted
  - Updated
  - Valid
  - Withdrawn
  - Other

ResourceTypeGeneral:
  $id: ResourceTypeGeneral
  type: keyword
  enum:
  - Audiovisual
  - Book
  - BookChapter
  - Collection
  - ComputationalNotebook
  - ConferencePaper
  - ConferenceProceeding
  - DataPaper
  - Dataset
  - Dissertation
  - Event
  - Image
  - Instrument
  - InteractiveResource
  - Journal
  - JournalArticle
  - Model
  - OutputManagementPlan
  - PeerReview
  - PhysicalObject
  - Preprint
  - Report
  - Service
  - Software
  - Sound
  - Standard
  - StudyRegistration
  - Text
  - Workflow
  - Other

ResourceType:
  $id: ResourceType
  marshmallow:
    class: test_datacite.services.records.schema_datatypes.ResourceTypeSchema
  ui:
    marshmallow:
      class: test_datacite.services.records.ui_schema_datatypes.ResourceTypeUISchema
  properties:
    resourceType:
      type: keyword
    resourceTypeGeneral:
      "use": "datacite-datatypes#ResourceTypeGeneral"
      required: true

RelatedIdentifierType:
  $id: RelatedIdentifierType
  type: keyword
  enum:
  - ARK
  - arXiv
  - bibcode
  - DOI
  - EAN13
  - EISSN
  - Handle
  - IGSN
  - ISBN
  - ISSN
  - ISTC
  - LISSN
  - LSID
  - PMID
  - PURL
  - UPC
  - URL
  - URN
  - w3id

RelationType:
  $id: RelationType
  type: keyword
  enum:
  - IsCitedBy
  - Cites
  - IsCollectedBy
  - Collects
  - IsSupplementTo
  - IsSupplementedBy
  - IsContinuedBy
  - Continues
  - IsDescribedBy
  - Describes
  - HasMetadata
  - IsMetadataFor
  - HasVersion
  - IsVersionOf
  - IsNewVersionOf
  - IsPartOf
  - IsPreviousVersionOf
  - IsPublishedIn
  - HasPart
  - IsReferencedBy
  - References
  - IsDocumentedBy
  - Documents
  - IsCompiledBy
  - Compiles
  - IsVariantFormOf
  - IsOriginalFormOf
  - IsIdenticalTo
  - IsReviewedBy
  - Reviews
  - IsDerivedFrom
  - IsSourceOf
  - IsRequiredBy
  - Requires
  - IsObsoletedBy
  - Obsoletes

RelatedObject:
  $id: RelatedObject
  marshmallow:
    class: test_datacite.services.records.schema_datatypes.RelatedObjectSchema
  ui:
    marshmallow:
      class: test_datacite.services.records.ui_schema_datatypes.RelatedObjectUISchema

  properties:
    relationType:
      "use": "datacite-datatypes#RelationType"
      required: true
    relatedMetadataScheme:
      type: keyword
    schemeURI:
      type: url
    schemeType:
      type: keyword
    resourceTypeGeneral:
      "$ref": "datacite-datatypes#ResourceTypeGeneral"

RelatedIdentifier:
  $id: RelatedIdentifier
  use: "datacite-datatypes#RelatedObject"
  marshmallow:
    class: test_datacite.services.records.schema_datatypes.RelatedIdentifierSchema
  ui:
    marshmallow:
      class: test_datacite.services.records.ui_schema_datatypes.RelatedIdentifierUISchema
  properties:
    relatedIdentifier:
      type: keyword
    relatedIdentifierType:
      "use": "datacite-datatypes#RelatedIdentifierType"

RelatedItemIdentifier:
  $id: RelatedItemIdentifier
  marshmallow:
    class: test_datacite.services.records.schema_datatypes.RelatedItemIdentifierSchema
  ui:
    marshmallow:
      class: test_datacite.services.records.ui_schema_datatypes.RelatedItemIdentifierUISchema
  properties:
    relatedItemIdentifier:
      type: keyword
      required: true
    relatedItemIdentifierType:
      use: "datacite-datatypes#RelatedIdentifierType"
      required: true

RelatedItemTitle:
    $id: RelatedItemTitle
    marshmallow:
      class: test_datacite.services.records.schema_datatypes.RelatedItemTitleSchema
    ui:
      marshmallow:
        class: test_datacite.services.records.ui_schema_datatypes.RelatedItemTitleUISchema
    properties:
      title:
        type: fulltext
        required: true
      titleType:
        use: "datacite-datatypes#TitleType"
      lang:
        type: keyword

RelatedItem:
  $id: RelatedItem
  use: "datacite-datatypes#RelatedObject"
  marshmallow:
    class: test_datacite.services.records.schema_datatypes.RelatedItemSchema
  ui:
    marshmallow:
      class: test_datacite.services.records.ui_schema_datatypes.RelatedItemUISchema
  properties:
    relatedItemIdentifier:
      use: "datacite-datatypes#RelatedItemIdentifier"
      required: true

    relatedItemType:
      use: "datacite-datatypes#ResourceTypeGeneral"
      required: true

    creators[]:
      use: "datacite-datatypes#Creator"

    contributors[]:
      use: "datacite-datatypes#Contributor"

    titles[]:
      use: "datacite-datatypes#RelatedItemTitle"
      ^required: true

    publicationYear:
      type: keyword

    volume:
      type: keyword
    issue:
      type: keyword
    firstPage:
      type: keyword
    lastPage:
      type: keyword
    edition:
      type: keyword
    publisher:
      type: keyword
    number:
      type: keyword
    numberType:
      type: keyword
      enum:
        - Article
        - Chapter
        - Report
        - Other

DescriptionType:
  $id: DescriptionType
  type: keyword
  enum:
  - Abstract
  - Methods
  - SeriesInformation
  - TableOfContents
  - TechnicalInfo
  - Other

GeoLocationPoint:
  $id: GeoLocationPoint
  marshmallow:
    class: test_datacite.services.records.schema_datatypes.GeoLocationPointSchema
  ui:
    marshmallow:
      class: test_datacite.services.records.ui_schema_datatypes.GeoLocationPointUISchema

  properties:
    pointLongitude:
      "$ref": "datacite-datatypes#Longitude"
    pointLatitude:
      "$ref": "datacite-datatypes#Latitude"

GeoLocationBox:
  $id: GeoLocationBox
  marshmallow:
    class: test_datacite.services.records.schema_datatypes.GeoLocationBoxSchema
  ui:
    marshmallow:
      class: test_datacite.services.records.ui_schema_datatypes.GeoLocationBoxUISchema
  properties:
    westBoundLongitude:
      use: "datacite-datatypes#Longitude"
      required: true
    eastBoundLongitude:
      use: "datacite-datatypes#Longitude"
      required: true
    southBoundLatitude:
      use: "datacite-datatypes#Latitude"
      required: true
    northBoundLatitude:
      use: "datacite-datatypes#Latitude"
      required: true

GeoLocationPolygon:
  $id: GeoLocationPolygon
  marshmallow:
    class: test_datacite.services.records.schema_datatypes.GeoLocationPolygonSchema
  ui:
    marshmallow:
      class: test_datacite.services.records.ui_schema_datatypes.GeoLocationPolygonUISchema
  properties:
    polygonPoints[]:
      use: "datacite-datatypes#GeoLocationPoint"
      ^required: true
    inPolygonPoint:
      use: "datacite-datatypes#GeoLocationPoint"


GeoLocation:
  $id: GeoLocation
  marshmallow:
    class: test_datacite.services.records.schema_datatypes.GeoLocationSchema
  ui:
    marshmallow:
      class: test_datacite.services.records.ui_schema_datatypes.GeoLocationUISchema
  properties:
    geoLocationPlace:
      type: keyword
    geoLocationPoint:
      use: "datacite-datatypes#GeoLocationPoint"
    geoLocationBox:
      use: "datacite-datatypes#GeoLocationBox"

    geoLocationPolygons[]:
      use: "datacite-datatypes#GeoLocationPolygon"

FunderIdentifierType:
  $id: FunderIdentifierType
  type: keyword
  enum:
  - ISNI
  - GRID
  - Crossref Funder ID
  - ROR
  - Other

Prefix:
  $id: Prefix
  type: keyword

Publisher:
  $id: Publisher
  marshmallow:
    class: test_datacite.services.records.schema_datatypes.PublisherSchema
  ui:
    marshmallow:
      class: test_datacite.services.records.ui_schema_datatypes.PublisherUISchema
  properties:
    name:
      type: keyword
      required: true
    publisherIdentifier:
      type: keyword
    publisherIdentifierScheme:
      type: keyword
    schemeURI:
      type: url
    lang:
      type: keyword

Subject:
  $id: Subject
  marshmallow:
    class: test_datacite.services.records.schema_datatypes.SubjectSchema
  ui:
    marshmallow:
      class: test_datacite.services.records.ui_schema_datatypes.SubjectUISchema
  properties:
    subject:
      type: keyword
      required: true
    subjectScheme:
      type: keyword
    schemeURI:
      type: url
    valueURI:
      type: url
    classificationCode:
      type: keyword
    lang:
      type: keyword

Rights:
  $id: Rights
  marshmallow:
    class: test_datacite.services.records.schema_datatypes.RightsSchema
  ui:
    marshmallow:
      class: test_datacite.services.records.ui_schema_datatypes.RightsUISchema
  properties:
    rights:
      type: keyword
    rightsURI:
      type: url
    rightsIdentifier:
      type: keyword
    rightsIdentifierScheme:
      type: keyword
    schemeURI:
      type: url
    lang:
      type: keyword

Description:
  $id: Description
  marshmallow:
    class: test_datacite.services.records.schema_datatypes.DescriptionSchema
  ui:
    marshmallow:
      class: test_datacite.services.records.ui_schema_datatypes.DescriptionUISchema
  properties:
    description:
      type: fulltext
      required: true
    descriptionType:
      use: "datacite-datatypes#DescriptionType"
      required: true
    lang:
      type: keyword

FundingReference:
  $id: FundingReference
  marshmallow:
    class: test_datacite.services.records.schema_datatypes.FundingReferenceSchema
  ui:
    marshmallow:
      class: test_datacite.services.records.ui_schema_datatypes.FundingReferenceUISchema
  properties:
    funderName:
      type: keyword
      required: true
    funderIdentifier:
      type: keyword
    funderIdentifierType:
      use: "datacite-datatypes#FunderIdentifierType"
    awardNumber:
      type: keyword
    awardURI:
      type: url
    awardTitle:
      type: keyword

Container:
  $id: Container
  marshmallow:
    class: test_datacite.services.records.schema_datatypes.ContainerSchema
  ui:
    marshmallow:
      class: test_datacite.services.records.ui_schema_datatypes.ContainerUISchema
  properties:
    type:
      type: keyword
    title:
      type: keyword
    firstPage:
      type: keyword